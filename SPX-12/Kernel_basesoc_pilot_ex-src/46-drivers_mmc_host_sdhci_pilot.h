--- linux-3.14.17/drivers/mmc/host/sdhci-pilot.h	2014-09-12 16:25:48.041062221 +0000
+++ linux/drivers/mmc/host/sdhci-pilot.h	2014-09-12 00:26:28.924354079 +0000
@@ -0,0 +1,203 @@
+
+#if defined(CONFIG_SOC_SE_PILOT4)
+#define NO_OF_SDHCS				(CONFIG_SPX_FEATURE_GLOBAL_SD_SLOT_COUNT + CONFIG_SPX_FEATURE_GLOBAL_EMMC_FLASH_COUNT)	//Numbers of SDIO
+#define SDHC0					0
+#define SDHC1					1
+#define EMMC					2
+#define PILOT_SDHC_ERR_NONE		0
+
+#define SDHC0_BASE_ADDR			0x40C00000
+#define SDHC1_BASE_ADDR			0x40C01000
+#define EMMC_BASE_ADDR			0x40C02000
+#define SDHC0_LMEM_START_ADDR	(SDHC0_BASE_ADDR + 0x400)
+#define SDHC1_LMEM_START_ADDR	(SDHC1_BASE_ADDR + 0x400)
+#define EMMC_LMEM_START_ADDR	(EMMC_BASE_ADDR + 0x400)
+#define LMEM_LENGTH				0xBFF
+
+
+//Clock Divisor values
+#define PILOT_SDHC_CLK_400KHz	0x0FA
+#define PILOT_SDHC_CLK_20MHz	0x006
+#define PILOT_SDHC_CLK_25MHz	0x004
+#define PILOT_SDHC_CLK_50MHz	0x002
+
+//flags
+#define HOST_F_ACTIVE 0x0100
+#define HOST_F_STOP   0x1000
+//
+#define EXPECT_AUTOCMD12_INTR	0x1
+#define EXPECT_DATA_INTR		0x2
+#define EXPECT_CMD_INTR			0x4
+#define EXPECT_NO_INTR_PIO		0xFFFFFFF0
+
+//Response Type
+#define RESP_NONE				0x0
+#define RESP_136BIT				0x1
+#define RESP_48BIT				0x2
+#define RESP_48BIT_BUSY			0x3
+
+
+//controller specific register
+#define SDHCI_FSBLK_CTRL	0x84
+#endif
+#define SDHCI_CMDTMR 	0x100
+#define SDHCI_RSPTMR 	0x104
+#define SDHCI_TXDTTMR	0x108
+#define SDHCI_RXDTTMR	0x10c
+#if defined(CONFIG_SOC_SE_PILOT4)
+#define SDHCI_LTXSTS	0x118
+#define SDHCI_LMEMADDR	0x130
+#define SDHCI_LMEMCNT	0x134
+#endif 
+#define SDHCI_LMEMCFG	0x138
+#define SDHCI_LMEMCTL	0x13c
+#if defined(CONFIG_SOC_SE_PILOT4)
+#define SDHCI_LMEMSTATUS	0x140
+
+//register bits definitions
+//0x04
+#define BLKLEN_POS							0
+#define BLKLEN_BITS							0xfff
+#define BLKLEN								(BLKLEN_BITS << BLKLEN_POS)
+#define BLKCNT_POS							12
+#define BLKCNT_BITS							0x1ff
+#define BLKCNT								(BLKCNT_BITS << BLKCNT_POS)
+
+//0x0C
+#define MODE_POS							0
+#define MODE_BITS							0x1
+#define MODE								(MODE_BITS << MODE_POS)
+#define AUTOCMD12EN_POS						2
+#define AUTOCMD12EN_BITS					0x1
+#define AUTOCMD12EN							(AUTOCMD12EN_BITS << AUTOCMD12EN_POS)
+#define DIRECTION_POS						4
+#define DIRECTION_BITS						0x1
+#define DIRECTION							(DIRECTION_BITS  << DIRECTION_POS)
+#define MULTIBLOCK_POS						5
+#define MULTIBLOCK_BITS						0x1
+#define MULTIBLOCK							(MULTIBLOCK_BITS << MULTIBLOCK_POS)
+#define RESPTYPE_POS						16
+#define RESPTYPE_BITS						0x3
+#define RESPTYPE							(RESPTYPE_BITS << RESPTYPE_POS)
+#define CRCCHECKENABLE_POS					19
+#define CRCCHECKENABLE_BITS					0x1
+#define CRCCHECKENABLE						(CRCCHECKENABLE_BITS << CRCCHECKENABLE_POS)
+#define CMDINDEXCHECK_POS					20
+#define CMDINDEXCHECK_BITS					0x1
+#define CMDINDEXCHECK						(CMDINDEXCHECK_BITS << CMDINDEXCHECK_POS)
+#define DATAPRESENT_POS						21
+#define DATAPRESENT_BITS					0x1
+#define DATAPRESENT							(DATAPRESENT_BITS << DATAPRESENT_POS)
+#define CMDINDEX_POS						24
+#define CMDINDEX_BITS						0x3f
+#define CMDINDEX							(CMDINDEX_BITS << CMDINDEX_POS)
+#define CMDSET_POS							31
+#define CMDSET_BITS							0x1
+#define CMDSET								(CMDSET_BITS << CMDSET_POS)
+
+//0x24
+#define CARD_INSERTED_POS					16
+#define CARD_INSERTED_BITS					0x1
+#define CARD_INSERTED						(CARD_INSERTED_BITS << CARD_INSERTED_POS)
+#define WRITE_PROTECT_PIN_STATUS_POS		19
+#define WRITE_PROTECT_PIN_STATUS_BITS		0x1
+#define WRITE_PROTECT_PIN_STATUS			(WRITE_PROTECT_PIN_STATUS_BITS << WRITE_PROTECT_PIN_STATUS_POS)
+
+//0x2C
+#define SDCLK_SELECT_POS					0
+#define SDCLK_SELECT_BITS					0x3
+#define SDCLK_SELECT						(SDCLK_SELECT_BITS<<SDCLK_SELECT_POS)
+#define SDCLK_CLK_ENABLE_POS				2
+#define SDCLK_CLK_ENABLE_BITS				0x1
+#define SDCLK_CLK_ENABLE					(SDCLK_CLK_ENABLE_BITS<<SDCLK_CLK_ENABLE_POS)
+#define SDCLK_POLARITY_POS					3
+#define SDCLK_POLARITY_BITS					0x1
+#define SDCLK_POLARITY						(SDCLK_POLARITY_BITS<<SDCLK_POLARITY_POS)
+#define FSCLK_DIVISOR_POS					4
+#define FSCLK_DIVISOR_BITS					0x3ff
+#define FSCLK_DIVISOR						(FSCLK_DIVISOR_BITS<<FSCLK_DIVISOR_POS)
+#define RX_CLK_DELAY_POS					21
+#define RX_CLK_DELAY_BITS					0x1
+#define RX_CLK_DELAY						(RX_CLK_DELAY_BITS << RX_CLK_DELAY_POS)
+#define DEB_SEL_POS							22
+#define DEB_SEL_BITS						0x3
+#define DEB_SEL								(DEB_SEL_BITS << DEB_SEL_POS)
+
+//0x30
+//Interrupt status of different bits in interrupt status register
+#define PILOT_SDHC_MMC_BOOT_ACK				0x10000000
+#define PILOT_SDHC_WRITE_CMD_RSP_ERR		0x08000000
+#define PILOT_SDHC_XDMA_COMPL_ERR			0x04000000
+#define PILOT_SDHC_MMC_BOOT_COMPL			0x02000000
+#define PILOT_SDHC_AUTO_CMD12_COMPL			0x01000000
+#define PILOT_SDHC_LIMIT_ERR				0x00800000
+#define PILOT_SDHC_DATA_END_BIT_ERR			0x00400000
+#define PILOT_SDHC_DATA_CRC_ERR				0x00200000
+#define PILOT_SDHC_DATA_TIMEOUT_ERR			0x00100000
+#define PILOT_SDHC_CMD_INDEX_ERR			0x00080000
+#define PILOT_SDHC_CMD_END_BIT_ERR			0x00040000
+#define PILOT_SDHC_CMD_CRC_ERR				0x00020000
+#define PILOT_SDHC_CMD_TIMEOUT_ERR			0x00010000
+#define PILOT_SDHC_WRITE_PROTCT_ERR			0x00000200
+#define PILOT_SDHC_CARD_INTRPT				0x00000100
+#define PILOT_SDHC_CARD_REMOVAL				0x00000080
+#define PILOT_SDHC_CARD_INSERTION			0x00000040
+#define PILOT_SDHC_BUFFER_READ_RDY			0x00000020
+#define PILOT_SDHC_BUFFER_WRITE_RDY			0x00000010
+#define PILOT_SDHC_DMA_INTERRUPT			0x00000008
+#define PILOT_SDHC_TRANSFER_COMPL			0x00000002
+#define PILOT_SDHC_COMMAND_COMPL			0X00000001
+
+//0x118
+#define LMEM_PG_VALID_EMPTY_POS				12
+#define LMEM_PG_VALID_EMPTY_BITS			0x1
+#define LMEM_PG_VALID_EMPTY					(LMEM_PG_VALID_EMPTY_BITS << LMEM_PG_VALID_EMPTY_POS)
+
+//0x130
+#define LMEM_FREE_PTR_POS					0
+#define LMEM_FREE_PTR_BITS					0x3ff
+#define LMEM_FREE_PTR						(LMEM_FREE_PTR_BITS << LMEM_FREE_PTR_POS)
+
+//0x134
+#define LMEM_VALID_DATA_PAGES_CNT_POS		16
+#define LMEM_VALID_DATA_PAGES_CNT_BITS		0xffff
+#define LMEM_VALID_DATA_PAGES_CNT			(LMEM_VALID_DATA_PAGES_CNT_BITS << LMEM_VALID_DATA_PAGES_CNT_POS)
+
+//0x138
+#define LMEM_PAGE_SIZE_DWORDS_POS			0
+#define LMEM_PAGE_SIZE_DWORDS_BITS			0xff
+#define LMEM_PAGE_SIZE_DWORDS				(LMEM_PAGE_SIZE_DWORDS_BITS << LMEM_PAGE_SIZE_DWORDS_POS)
+#define LMEM_MAX_NUM_PAGES_POS				8
+#define LMEM_MAX_NUM_PAGES_BITS				0x7ff
+#define LMEM_MAX_NUM_PAGES					(LMEM_MAX_NUM_PAGES_BITS << LMEM_MAX_NUM_PAGES_POS)
+
+//0x13C
+#define LMEM_FREE_PAGE_LOW_WM_POS			16
+#define LMEM_FREE_PAGE_LOW_WM_BITS			0xff
+#define LMEM_FREE_PAGE_LOW_WM				(LMEM_FREE_PAGE_LOW_WM_BITS << LMEM_FREE_PAGE_LOW_WM_POS)
+#define LMEM_FREE_PAGE_HIGH_WM_POS			24
+#define LMEM_FREE_PAGE_HIGH_WM_BITS			0xff
+#define LMEM_FREE_PAGE_HIGH_WM				(LMEM_FREE_PAGE_HIGH_WM_BITS << LMEM_FREE_PAGE_HIGH_WM_POS)
+
+//0x140
+#define LMEM_COMPLETION_PTR_POS				0
+#define LMEM_COMPLETION_PTR_BITS			0x3ff
+#define LMEM_COMPLETION_PTR					(LMEM_COMPLETION_PTR_BITS << LMEM_COMPLETION_PTR_POS)
+#define LMEM_ALL_PAGES_ALLOCATED_POS		17
+#define LMEM_ALL_PAGES_ALLOCATED_BITS		0x1
+#define LMEM_ALL_PAGES_ALLOCATED			(LMEM_ALL_PAGES_ALLOCATED_BITS << LMEM_ALL_PAGES_ALLOCATED_POS)
+
+//LMEM_BASE and LMEM_LIMIT ADDRESSES from fgb, bit definitions
+#define LMEM_BASE_ADDR_REG					0x40900028
+#define LMEM_BASE_ADDR_POS					16
+#define LMEM_BASE_ADDR_BITS					0xffff
+#define LMEM_BASE_ADDR						(LMEM_BASE_ADDR_BITS << LMEM_BASE_ADDR_POS)
+#define LMEM_LIMIT_ADDR_REG					0x40900038
+#define LMEM_LIMIT_POS						16
+#define LMEM_LIMIT_BITS						0xffff
+#define LMEM_LIMIT							(LMEM_LIMIT_BITS << LMEM_LIMIT_POS)
+#endif
+
+#define PILOT_SD_MAX_CLOCK (50 * 1000000)
+#define PILOT_SD_MIN_CLOCK (25 * 1000000)
+
