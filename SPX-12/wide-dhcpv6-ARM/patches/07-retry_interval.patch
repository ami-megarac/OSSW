diff -Nur wide-dhcpv6-20080615-new/common.c wide-dhcpv6-20080615/common.c
--- wide-dhcpv6-20080615-new/common.c	2010-07-14 15:16:15.000000000 +0800
+++ wide-dhcpv6-20080615/common.c	2010-07-14 15:24:44.000000000 +0800
@@ -100,6 +100,7 @@
 
 int foreground;
 int debug_thresh;
+extern int retry_interval;
 
 static int dhcp6_count_list __P((struct dhcp6_list *));
 static int in6_matchflags __P((struct sockaddr *, char *, int));
@@ -2864,8 +2865,13 @@
 		break;
 	}
 
-	interval.tv_sec = (ev->retrans * 1000) / 1000000;
-	interval.tv_usec = (ev->retrans * 1000) % 1000000;
+	if( ev->state == DHCP6S_SOLICIT && retry_interval != -1){
+		interval.tv_sec = retry_interval * 10;
+		interval.tv_usec = 0;
+	}else{
+		interval.tv_sec = (ev->retrans * 1000) / 1000000;
+		interval.tv_usec = (ev->retrans * 1000) % 1000000;
+	}
 	dhcp6_set_timer(&interval, ev->timer);
 
 	statestr = dhcp6_event_statestr(ev);
diff -Nur wide-dhcpv6-20080615-new/dhcp6c.c wide-dhcpv6-20080615/dhcp6c.c
--- wide-dhcpv6-20080615-new/dhcp6c.c	2010-07-14 15:25:37.000000000 +0800
+++ wide-dhcpv6-20080615/dhcp6c.c	2010-07-14 15:25:10.000000000 +0800
@@ -82,6 +82,8 @@
 static int debug = 0;
 static int exit_ok = 0;
 static sig_atomic_t sig_flags = 0;
+int retry_interval = -1;
+static int retry = 0xFF;//DHCP6C will send SOLICIT forever if IP is not received, 0xFF is defined as send SOLICIT forever
 #define SIGF_TERM 0x1
 #define SIGF_HUP 0x2
 
@@ -171,8 +173,22 @@
 	else
 		progname++;
 
-	while ((ch = getopt(argc, argv, "c:dDfik:p:")) != -1) {
+	while ((ch = getopt(argc, argv, "c:dDfik:p:I:R:")) != -1) {
 		switch (ch) {
+		case 'I':
+			retry_interval = atoi(optarg);
+			if( retry_interval >255 || retry_interval <= 0){
+				fprintf(stderr, "Retry inteval must less than 255\n");
+				exit(0);
+			}
+			break;
+		case 'R':
+			retry = atoi(optarg);
+			if( retry > 255 || retry <= 0){
+				fprintf(stderr, "Retry count must less than 255\n");
+				exit(0);
+			}
+			break;
 		case 'c':
 			conffile = optarg;
 			break;
@@ -530,7 +546,6 @@
 			maxsock = (sock > ctlsock) ? sock : ctlsock;
 			(void)dhcp6_ctl_setreadfds(&r, &maxsock);
 		}
-
 		ret = select(maxsock + 1, &r, NULL, NULL, w);
 
 		switch (ret) {
@@ -899,9 +914,14 @@
 			}
 		}
 		client6_send(ev);
+		//DHCP6 client defalut will send SOLICIT forever
+		if( (retry != 0xff) ){
+			retry--;
+		}
+		if(retry == -1)
+			exit(0);
 		break;
 	}
-
 	dhcp6_reset_timer(ev);
 
 	return (ev->timer);
diff -Nur wide-dhcpv6-20080615-new/dhcp6relay.c wide-dhcpv6-20080615/dhcp6relay.c
--- wide-dhcpv6-20080615-new/dhcp6relay.c	2010-07-14 15:15:16.000000000 +0800
+++ wide-dhcpv6-20080615/dhcp6relay.c	2010-07-14 15:24:44.000000000 +0800
@@ -87,6 +87,8 @@
 
 static struct sockaddr_in6 sa6_server, sa6_client;
 
+int retry_interval = -1;
+
 struct ifid_list {
 	TAILQ_ENTRY(ifid_list) ilink;
 	unsigned int ifid;
diff -Nur wide-dhcpv6-20080615-new/dhcp6s.c wide-dhcpv6-20080615/dhcp6s.c
--- wide-dhcpv6-20080615-new/dhcp6s.c	2010-07-14 15:15:16.000000000 +0800
+++ wide-dhcpv6-20080615/dhcp6s.c	2010-07-14 15:24:44.000000000 +0800
@@ -83,6 +83,7 @@
 #define DHCP6S_PIDFILE "/var/run/dhcp6s.pid"
 
 #define CTLSKEW 300
+int retry_interval = -1;
 
 typedef enum { DHCP6_BINDING_IA } dhcp6_bindingtype_t;
 
