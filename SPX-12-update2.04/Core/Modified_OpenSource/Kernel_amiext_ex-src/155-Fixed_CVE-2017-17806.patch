diff -Naur linux_org/crypto/hmac.c linux/crypto/hmac.c
--- linux_org/crypto/hmac.c	2019-03-25 13:56:01.354478231 +0800
+++ linux/crypto/hmac.c	2019-03-25 15:06:32.314278614 +0800
@@ -197,11 +197,15 @@
 	salg = shash_attr_alg(tb[1], 0, 0);
 	if (IS_ERR(salg))
 		return PTR_ERR(salg);
-
+	alg = &salg->base;
+ 
+	/* The underlying hash algorithm must be unkeyed */
 	err = -EINVAL;
+	if (crypto_shash_alg_has_setkey(salg))
+		goto out_put_alg;
+	
 	ds = salg->digestsize;
 	ss = salg->statesize;
-	alg = &salg->base;
 	if (ds > alg->cra_blocksize ||
 	    ss < alg->cra_blocksize)
 		goto out_put_alg;
diff -Naur linux_org/crypto/shash.c linux/crypto/shash.c
--- linux_org/crypto/shash.c	2019-03-25 13:56:08.530115450 +0800
+++ linux/crypto/shash.c	2019-03-25 15:06:52.573869750 +0800
@@ -24,11 +24,12 @@
 
 static const struct crypto_type crypto_shash_type;
 
-static int shash_no_setkey(struct crypto_shash *tfm, const u8 *key,
-			   unsigned int keylen)
+int shash_no_setkey(struct crypto_shash *tfm, const u8 *key,
+		    unsigned int keylen)
 {
 	return -ENOSYS;
 }
+EXPORT_SYMBOL_GPL(shash_no_setkey);
 
 static int shash_setkey_unaligned(struct crypto_shash *tfm, const u8 *key,
 				  unsigned int keylen)
diff -Naur linux_org/include/crypto/internal/hash.h linux/include/crypto/internal/hash.h
--- linux_org/include/crypto/internal/hash.h	2019-03-25 15:08:09.870956349 +0800
+++ linux/include/crypto/internal/hash.h	2019-03-25 15:04:26.876571250 +0800
@@ -70,6 +70,14 @@
 			    struct ahash_instance *inst);
 void ahash_free_instance(struct crypto_instance *inst);
 
+int shash_no_setkey(struct crypto_shash *tfm, const u8 *key,
+		    unsigned int keylen);
+
+static inline bool crypto_shash_alg_has_setkey(struct shash_alg *alg)
+{
+	return alg->setkey != shash_no_setkey;
+}
+
 int crypto_init_ahash_spawn(struct crypto_ahash_spawn *spawn,
 			    struct hash_alg_common *alg,
 			    struct crypto_instance *inst);
