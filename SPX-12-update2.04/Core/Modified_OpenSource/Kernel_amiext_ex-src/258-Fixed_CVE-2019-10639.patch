--- a/include/net/net_namespace.h	2019-09-11 14:41:37.660611314 +0800
+++ b/include/net/net_namespace.h	2019-09-11 16:15:57.459959049 +0800
@@ -52,6 +52,8 @@
 #endif
 	spinlock_t		rules_mod_lock;
 
+	u32			hash_mix;
+
 	struct list_head	list;		/* list of network namespaces */
 	struct list_head	cleanup_list;	/* namespaces on death row */
 	struct list_head	exit_list;	/* Use only net_mutex */
--- a/include/net/netns/hash.h	2019-09-11 14:41:38.072611240 +0800
+++ b/include/net/netns/hash.h	2019-09-11 16:18:51.816016164 +0800
@@ -1,21 +1,10 @@
 #ifndef __NET_NS_HASH_H__
 #define __NET_NS_HASH_H__
 
-#include <asm/cache.h>
+#include <net/net_namespace.h>
 
-struct net;
-
-static inline unsigned int net_hash_mix(struct net *net)
+static inline u32 net_hash_mix(const struct net *net)
 {
-#ifdef CONFIG_NET_NS
-	/*
-	 * shift this right to eliminate bits, that are
-	 * always zeroed
-	 */
-
-	return (unsigned)(((unsigned long)net) >> L1_CACHE_SHIFT);
-#else
-	return 0;
-#endif
+	return net->hash_mix;
 }
 #endif
--- a/net/core/net_namespace.c	2019-09-11 14:39:31.184634361 +0800
+++ b/net/core/net_namespace.c	2019-09-11 16:20:28.228049932 +0800
@@ -156,6 +156,7 @@
 
 	atomic_set(&net->count, 1);
 	atomic_set(&net->passive, 1);
+	get_random_bytes(&net->hash_mix, sizeof(u32));
 	net->dev_base_seq = 1;
 	net->user_ns = user_ns;
 
