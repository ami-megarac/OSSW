diff -Naur linux_org/include/net/tcp.h linux/include/net/tcp.h
--- linux_org/include/net/tcp.h	2019-07-10 14:22:48.948755410 +0800
+++ linux/include/net/tcp.h	2019-07-10 14:32:00.445827837 +0800
@@ -275,6 +275,7 @@
 extern int sysctl_tcp_tso_win_divisor;
 extern int sysctl_tcp_mtu_probing;
 extern int sysctl_tcp_base_mss;
+extern int sysctl_tcp_min_snd_mss;
 extern int sysctl_tcp_workaround_signed_windows;
 extern int sysctl_tcp_slow_start_after_idle;
 extern int sysctl_tcp_thin_linear_timeouts;
diff -Naur linux_org/net/ipv4/sysctl_net_ipv4.c linux/net/ipv4/sysctl_net_ipv4.c
--- linux_org/net/ipv4/sysctl_net_ipv4.c	2019-07-10 14:04:18.237424126 +0800
+++ linux/net/ipv4/sysctl_net_ipv4.c	2019-07-10 14:31:09.226722734 +0800
@@ -34,6 +34,8 @@
 static int ip_local_port_range_min[] = { 1, 1 };
 static int ip_local_port_range_max[] = { 65535, 65535 };
 static int tcp_adv_win_scale_min = -31;
+static int tcp_min_snd_mss_min = TCP_MIN_SND_MSS;
+static int tcp_min_snd_mss_max = 65535;
 static int tcp_adv_win_scale_max = 31;
 static int ip_ttl_min = 1;
 static int ip_ttl_max = 255;
@@ -614,6 +616,15 @@
 		.mode		= 0644,
 		.proc_handler	= proc_dointvec,
 	},
+ 	{
+		.procname	= "tcp_min_snd_mss",
+		.data		= &sysctl_tcp_min_snd_mss,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= proc_dointvec_minmax,
+		.extra1		= &tcp_min_snd_mss_min,
+		.extra2		= &tcp_min_snd_mss_max,
+	},	
 	{
 		.procname	= "tcp_workaround_signed_windows",
 		.data		= &sysctl_tcp_workaround_signed_windows,
diff -Naur linux_org/net/ipv4/tcp_output.c linux/net/ipv4/tcp_output.c
--- linux_org/net/ipv4/tcp_output.c	2019-07-10 14:28:04.003008079 +0800
+++ linux/net/ipv4/tcp_output.c	2019-07-10 14:31:40.674289263 +0800
@@ -61,6 +61,7 @@
 
 int sysctl_tcp_mtu_probing __read_mostly = 0;
 int sysctl_tcp_base_mss __read_mostly = TCP_BASE_MSS;
+int sysctl_tcp_min_snd_mss __read_mostly = TCP_MIN_SND_MSS;
 
 /* By default, RFC2861 behavior.  */
 int sysctl_tcp_slow_start_after_idle __read_mostly = 1;
@@ -1254,8 +1255,7 @@
 	mss_now -= icsk->icsk_ext_hdr_len;
 
 	/* Then reserve room for full set of TCP options and 8 bytes of data */
-	if (mss_now < TCP_MIN_SND_MSS)
-		mss_now = TCP_MIN_SND_MSS;
+	mss_now = max(mss_now, sysctl_tcp_min_snd_mss);
 	return mss_now;
 }
 
