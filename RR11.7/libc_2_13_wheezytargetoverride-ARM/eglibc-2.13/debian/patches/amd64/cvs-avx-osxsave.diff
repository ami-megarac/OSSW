2012-01-26  Ulrich Drepper  <drepper@gmail.com>

	[BZ #13583]
	* sysdeps/x86_64/multiarch/init-arch.h: Define bit_OSXSAVE.
	* sysdeps/x86_64/multiarch/init-arch.c (__init_cpu_features): If
	bit_AVX is set also check OSXAVE/XCR0 and reset bit_AVX if necessary.

---
 sysdeps/x86_64/multiarch/init-arch.c |   12 ++++++++++++
 sysdeps/x86_64/multiarch/init-arch.h |    2 ++
 2 files changed, 14 insertions(+)

--- a/sysdeps/x86_64/multiarch/init-arch.c
+++ b/sysdeps/x86_64/multiarch/init-arch.c
@@ -111,6 +111,18 @@
   else
     kind = arch_kind_other;
 
+  if (__cpu_features.cpuid[COMMON_CPUID_INDEX_1].ecx & bit_AVX)
+    {
+      /* Reset the AVX bit in case OSXSAVE is disabled.  */
+      if ((__cpu_features.cpuid[COMMON_CPUID_INDEX_1].ecx & bit_OSXSAVE) == 0
+	  || ({ unsigned int xcrlow;
+	      unsigned int xcrhigh;
+	      asm ("xgetbv"
+		   : "=a" (xcrlow), "=d" (xcrhigh) : "c" (0));
+	      (xcrlow & 6) != 6; }))
+	__cpu_features.cpuid[COMMON_CPUID_INDEX_1].ecx &= ~bit_AVX;
+    }
+
   __cpu_features.family = family;
   __cpu_features.model = model;
   atomic_write_barrier ();
--- a/sysdeps/x86_64/multiarch/init-arch.h
+++ b/sysdeps/x86_64/multiarch/init-arch.h
@@ -29,6 +29,8 @@
 # define bit_SSSE3	(1 << 9)
 # define bit_SSE4_1	(1 << 19)
 # define bit_SSE4_2	(1 << 20)
+# define bit_OSXSAVE	(1 << 27)
+# define bit_AVX	(1 << 28)
 
 # define index_SSE2	COMMON_CPUID_INDEX_1*CPUID_SIZE+CPUID_EDX_OFFSET
 # define index_SSSE3	COMMON_CPUID_INDEX_1*CPUID_SIZE+CPUID_ECX_OFFSET
